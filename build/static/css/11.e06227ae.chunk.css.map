{"version":3,"sources":["webpack://src/Pages/About/index.module.scss","webpack://src/Modules/TeamCard/index.module.scss","webpack://src/styles/abstract/helpers/mixins/_size.scss","webpack://src/Components/Breadcrumbs/index.module.scss","webpack://src/styles/abstract/helpers/mixins/_flexbox.scss"],"names":[],"mappings":"AAEA,sBACE,eAAgB,CAChB,mCAAoC,CACpC,0CAA2C,CAC3C,+BAAgC,CAChC,qCAAsC,CACtC,eAAgB,CAChB,aAAc,CACd,iBAAkB,CACnB,oBAGC,iBAAkB,CAClB,qCAAsC,CACtC,yCAA0C,CAC1C,yBAA0B,CAC1B,cAAe,CACf,wBAAyB,CAC1B,mBAGC,YAAa,CACb,eAAgB,CCtBlB,uBCoBE,UDnBkB,CCoBlB,WDpBkB,CAElB,iBAAkB,CAClB,eAAgB,CAChB,gBAAiB,CACjB,iBAAkB,CAClB,mBAAoB,CACpB,0CAA2C,CAR7C,8BAWI,iBAAkB,CAClB,SAAU,CACV,MAAO,CACP,OAAQ,CACR,QAAS,CACT,mCAAoC,CACpC,SAAU,CACV,UAAW,CACZ,4BAID,iBAAkB,CAClB,KAAM,CACN,OAAQ,CACR,MAAO,CACP,YAAa,CACd,yBAGC,iBAAkB,CAClB,cAAe,CACf,SAAU,CACX,6CAIC,kBAAmB,CACnB,wBAAyB,CAC1B,uBAGC,8BAA+B,CAChC,sBAGC,mBAAqB,CACrB,eAAgB,CAChB,cAAe,CAChB,uBC9BC,WDiCmB,CChCnB,YDgCmB,CAEnB,iBAAkB,CAClB,SAAU,CACV,SAAU,CACV,SAAU,CACV,eAAgB,CAChB,iBAAkB,CAClB,uCAAwC,CACxC,qCAAsC,CACvC,wBAGC,iBAAkB,CAClB,0BAA2B,CAC3B,eAAgB,CEpElB,mDC+BI,kBD7BgC,CCwClC,YAlBc,CDrBf,0BAIC,cAAe,CAChB,gEAOK,YAAa,CACd,yBAKH,0BAA2B,CAC5B,4BAGC,YAAa","file":"11.e06227ae.chunk.css","sourcesContent":["@import \"../../styles/config\";\n\n.content {\n  min-height: 100%;\n  background-color: var(--color-white);\n  border-radius: var(--default-border-radius);\n  box-shadow: var(--box-shadow-sm);\n  border: 1px solid var(--color-primary);\n  max-width: 500px;\n  margin: 0 auto;\n  text-align: center;\n}\n\n.title {\n  padding: 20px 10px;\n  background-color: var(--color-primary);\n  font-family: var(--font-family-additional);\n  font-weight: var(--medium);\n  font-size: 30px;\n  color: var(--color-white);\n}\n\n.text {\n  padding: 20px;\n  line-height: 1.5;\n}\n","@import \"../../styles/config\";\n\n.block{\n  @include size(100%);\n\n  position: relative;\n  overflow: hidden;\n  min-height: 450px;\n  padding-top: 250px;\n  padding-bottom: 40px;\n  border-radius: var(--default-border-radius);\n\n  &::before {\n    position: absolute;\n    top: 180px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--color-black);\n    z-index: 1;\n    content: '';\n  }\n}\n\n.background {\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 300px;\n}\n\n.content {\n  position: relative;\n  padding: 0 20px;\n  z-index: 1;\n}\n\n.title,\n.text {\n  margin-bottom: 10px;\n  color: var(--color-white);\n}\n\n.title {\n  font-weight: var(--font-weight);\n}\n\n.text {\n  letter-spacing: 0.5px;\n  line-height: 1.3;\n  font-size: 14px;\n}\n\n.photo {\n  @include size(120px);\n\n  position: absolute;\n  top: 120px;\n  left: 30px;\n  z-index: 1;\n  overflow: hidden;\n  border-radius: 50%;\n  background-color: var(--color-secondary);\n  border: 3px solid var(--color-primary);\n}\n\n.quotes {\n  font-style: italic;\n  color: var(--color-primary);\n  line-height: 1.5;\n}\n","///\n/// Ease to set the width and height values\n///\n/// Mixin make easy to set the value `width` and `height` in the same time.\n///\n/// @access public\n///\n/// @param {Length} $width - `width` element\n/// @param {Length} $height ($width) - `height` element\n///\n/// @example scss - usage\n///   .foo {\n///     @include size(10em);\n///   }\n///\n///   .bar {\n///    @include size(100%, 10em);\n///   }\n///\n/// https://sass-guidelin.es/ru/#section-33\n\n@mixin size($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n","@import '../../styles/config';\n\n.block,\n.item {\n  @include flex($align-items: center);\n}\n\n\n.block {\n  padding: 30px 0;\n}\n\n.item {\n\n  &:last-child {\n\n    .divider {\n      display: none;\n    }\n  }\n}\n\n.link {\n  color: var(--color-primary);\n}\n\n.divider {\n  margin: 0 8px;\n}\n","///\n/// Simple use Flexbox\n///\n/// @access public\n///\n/// @param {Sub-Property} $justify-content\n/// @param {Sub-Property} $align-items\n/// @param {Sub-Property} $direction\n/// @param {Sub-Property} $wrap\n/// @param {Sub-Property} $display\n/// @example scss - usage\n///\n/// .foo {\n///   @include flex(space-between, center, column, wrap);\n/// }\n/// or\n/// .foo {\n///   @include flex(space-between, center, $display: inline-flex);\n/// }\n///\n\n@mixin flex(\n  $justify-content: null,\n  $align-items: null,\n  $direction: null,\n  $wrap: null,\n  $display: flex\n) {\n  @if $justify-content != null {\n    justify-content: $justify-content;\n  }\n\n  @if $align-items != null {\n    align-items: $align-items;\n  }\n\n  @if $direction != null {\n    flex-direction: $direction;\n  }\n\n  @if $wrap != null {\n    flex-wrap: $wrap;\n  }\n\n  display: $display;\n}\n"]}